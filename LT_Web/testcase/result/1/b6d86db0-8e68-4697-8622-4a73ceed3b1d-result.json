{"name": "test_toolbox_wide_table", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'text'", "trace": "self = <LT_Web.testcase.test_01login.TestStart object at 0x000001FA50EB9910>\n\n    @allure.story(\"工具箱-宽表\")\n    # @pytest.mark.skip\n    def test_toolbox_wide_table(self):\n        #案件-首页-工具箱-并表-功能操作校验\n>       text=self.search.search_case().click_toolbox_wide_table().check_WideTable1().check_WideTable2().check_WideTable3().check_WideTable4().check_WideTable5().\\\n            check_WideTable6().check_WideTable7()\n\ntest_01login.py:360: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\page\\thematic_analysis_module\\Toolbox_module\\WideTablePage.py:67: in check_WideTable7\n    text = self.steps(\"../data/thematic_analysis_module/Toolbox_module/WideTablePage.yaml\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LT_Web.page.thematic_analysis_module.Toolbox_module.WideTablePage.WideTablePage object at 0x000001FA50E93850>, path = '../data/thematic_analysis_module/Toolbox_module/WideTablePage.yaml'\n\n    def steps(self,path):\n        with open(path, encoding=\"utf-8\") as f:\n            name = inspect.stack()[1].function#获取当前代码、上级代码方法名,获取当前代码、上级代码modole名称\n            # print(name)\n            steps = yaml.safe_load(f)[name]#读取yaml文件\n        raw = json.dumps(steps)#json序列化\n        for key, value in self._params.items():\n            raw = raw.replace('${' + key + '}', value)#方法把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。\n            print(raw)\n        steps = json.loads(raw)#json反序列化\n        for step in steps:\n            # print(step)\n            if \"action\" in step.keys():\n                action = step[\"action\"]\n                if \"click\" == action:\n                    self.find(step[\"by\"], step[\"locator\"]).click()\n                if \"send\" == action:\n                    self.find(step[\"by\"], step[\"locator\"]).send_keys(step[\"value\"])\n                if \"send-enter\" == action:\n                    self.find(step[\"by\"], step[\"locator\"]).send_keys(step[\"value\"])\n                    # driver = webdriver.Chrome()\n                    ActionChains(self._driver).send_keys(Keys.ENTER).perform()  # 回车键\n                    sleep(1)\n                if \"send_submit\" == action:\n                    self.find(step[\"by\"], step[\"locator\"]).send_keys(step[\"value\"])\n                    # self._driver.keyevent(84)\n                    # self._driver.press_keycode(84)\n                    self._driver.press_keycode(66)#模拟键盘回车键\n    \n                if \"roll\" == action:\n                    #滚动查找元素\n                    text = step[\"locator\"]\n                    self._driver.find_element_by_android_uiautomator('new UiScrollable(new UiSelector().'\n                                                               'scrollable(true).instance(0)).'\n                                                               f'scrollIntoView(new UiSelector().text(\"{text}\")'\n                                                               '.instance(0));')\n                if \"roll_click\" == action:\n                    #滚动查找元素并点击\n                    ele = self.find(step[\"by\"], step[\"locator\"])\n                    self._driver.execute_script(\"arguments[0].scrollIntoView();\", ele)  # 滚动至元素ele可见\n                    ele.click()\n    \n                if \"roll_check\" == action:\n                    #首页滚动查找元素，scrollable(true).instance(1)中的1代表第二个scrollable=true的控件\n                    #new UiSelector().text()，new UiSelector().resourceId() 或者组合查询new UiSelector().text().resourceId()\n                    #textContains(String text)控件text属性包含的内容\n                    text = step[\"locator\"]\n                    self._driver.find_element_by_android_uiautomator('new UiScrollable(new UiSelector().'\n                                                               'scrollable(true).instance(1)).'\n                                                               f'scrollIntoView(new UiSelector().text(\"{text}\")'\n                                                               '.instance(0));')\n                if \"exam_click\" == action:#课程考试\n                    WebDriverWait(self._driver, 10).until(\n                        expected_conditions.element_to_be_clickable((step[\"by\"], step[\"locator2\"])))#显示等待开始考试按钮\n                    num = self.find(step[\"by\"], step[\"locator1\"]).text\n                    number = re.sub(\"\\D\", \"\", num)#获取出题数\n                    # print(int(number))\n                    self.find(step[\"by\"], step[\"locator2\"]).click()#点击开始考试按钮\n                    for i in range(int(number)):\n                        # print(i)\n                        WebDriverWait(self._driver, 10).until(\n                            expected_conditions.visibility_of_element_located((step[\"by\"], step[\"locator3\"])))#显示等待选项按钮\n                        self.find(step[\"by\"], step[\"locator3\"]).click()#选择A\n                        en_able = self.find(step[\"by\"], step[\"locator5\"]).is_enabled()#确定按钮是否可点击\n                        while en_able:#判断en_able是否为true\n                            self.find(step[\"by\"], step[\"locator5\"]).click()#点击确定\n                            break\n                        else:\n                            self.find(step[\"by\"], step[\"locator4\"]).click()  # 选择B\n                            self.find(step[\"by\"], step[\"locator5\"]).click()  # 点击确定\n                            # break\n                            continue\n                if \"upload_picture\" == action:#查找相册图片，并上传\n                    images  = self.finds(step[\"by\"], step[\"locator\"])\n                    images[2].click()\n    \n                if \"text\" == action:#获取元素文本信息\n>                   text_message = self.find(step[\"by\"], step[\"locator\"]).text\nE                   AttributeError: 'NoneType' object has no attribute 'text'\n\n..\\page\\basepagemodule\\base_page.py:148: AttributeError"}, "steps": [{"name": "启动Chrome", "status": "passed", "start": 1696920929796, "stop": 1696920932808}, {"name": "登录", "status": "passed", "start": 1696920932808, "stop": 1696920933242}, {"name": "搜索案件-回车-点击击进入其首页", "status": "passed", "start": 1696920933242, "stop": 1696920935026}, {"name": "点击工具箱-制作宽表", "status": "passed", "start": 1696920935026, "stop": 1696920935415}, {"name": "制作宽表", "status": "passed", "start": 1696920935415, "stop": 1696920936597}, {"name": "制作宽表", "status": "passed", "start": 1696920936597, "stop": 1696920937937}, {"name": "制作宽表", "status": "passed", "start": 1696920937937, "stop": 1696920939245}, {"name": "制作宽表", "status": "passed", "start": 1696920939245, "stop": 1696920940364}, {"name": "制作宽表", "status": "passed", "start": 1696920940364, "stop": 1696920941483}, {"name": "制作宽表", "status": "passed", "start": 1696920941483, "stop": 1696920942997}, {"name": "校验宽表是否保存成功", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'text'\n", "trace": "  File \"C:\\Users\\admin\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\admin\\PycharmProjects\\LeiTingWeb\\LT_Web\\page\\thematic_analysis_module\\Toolbox_module\\WideTablePage.py\", line 67, in check_WideTable7\n    text = self.steps(\"../data/thematic_analysis_module/Toolbox_module/WideTablePage.yaml\")\n  File \"C:\\Users\\admin\\PycharmProjects\\LeiTingWeb\\LT_Web\\page\\basepagemodule\\base_page.py\", line 148, in steps\n    text_message = self.find(step[\"by\"], step[\"locator\"]).text\n"}, "start": 1696920942997, "stop": 1696920944401}, {"name": "释放资源", "status": "passed", "start": 1696920944439, "stop": 1696920946562}], "start": 1696920933242, "stop": 1696920944401, "uuid": "a3379d40-538a-4af5-a4a2-506834792f69", "historyId": "89a3efc151616ec2a8ef2b63fc835af7", "testCaseId": "6477dd8bb055865ab67dc9f98f841a80", "fullName": "test_01login.TestStart#test_toolbox_wide_table", "labels": [{"name": "story", "value": "工具箱-宽表"}, {"name": "feature", "value": "奇数百炼Web"}, {"name": "parentSuite"}, {"name": "suite", "value": "test_01login"}, {"name": "subSuite", "value": "TestStart"}, {"name": "host", "value": "LAPTOP-MLUSLCCA"}, {"name": "thread", "value": "27812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_01login"}]}